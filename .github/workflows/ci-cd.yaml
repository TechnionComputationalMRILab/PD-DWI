name: CI
on:
  push:
    branches: [main]
  pull_request:

env:
  POETRY_VERSION: "1.1.11"
  PYTHON_VERSION: "3.8"

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["$PYTHON_VERSION"]
        poetry-version: ["$POETRY_VERSION"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - run: poetry install --no-interaction --no-root

      - run: poetry install --no-interaction

      - run: poetry run pytest

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          tags: pd-dwi:latest
          push: false

  deploy:
  - name: Build and publish to pypi
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    uses: JRubics/poetry-publish@latest
    with:
      python_version: "$PYTHON_VERSION"
      poetry_version: "==$POETRY_VERSION"
      pypi_token: ${{ secrets.TEST_PYPI_API_TOKEN }}
      build_format: "sdist"
      allow_poetry_pre_release: "yes"
      ignore_dev_requirements: "yes"
      repository_name: "testpypi"
      repository_url: "https://test.pypi.org/legacy/"
