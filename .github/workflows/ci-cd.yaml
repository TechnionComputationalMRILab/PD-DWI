name: CI
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8.13" ]
        poetry-version: [ "1.1.11" ]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - run: poetry install --no-interaction --no-root

      - run: poetry install --no-interaction

      - run: poetry run pytest

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          tags: pd-dwi:latest
          push: false

  deploy:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and publish to pypi
        if: github.event_name == 'push'
        uses: JRubics/poetry-publish@v1.12
        with:
          python_version: "3.8.13"
          poetry_version: "==1.1.11"
          build_format: "wheel"
          allow_poetry_pre_release: "yes"
          ignore_dev_requirements: "yes"
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
#          pypi_token: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_name: "testpypi"
#          repository_url: "https://test.pypi.org/legacy/"
